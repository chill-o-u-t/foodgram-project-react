name: Django-app workflow
on: [push]
jobs:
  build_push_backend_to_DockerHub:
    name: Building back and push to Docker Hub
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v2
        with:
          context: backend/
          push: true
          tags: chil1out/foodgram:version_1

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build_push_backend_to_DockerHub
      #- build_push_frontend_to_DockerHub
    if:
      contains('
      refs/heads/master
      refs/heads/main', github.ref)
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            sudo systemctl stop nginx
            sudo docker-compose stop
            sudo docker-compose rm web
            sudo docker-compose rm frontend
            sudo docker pull chil1out/foodgram:version_1
            sudo docker pull chil1out/foodgram_frontend:latest
            touch .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            sudo docker-compose up -d
            sudo docker-compose exec -T web python manage.py migrate --no-input
            sudo docker-compose exec -T web python manage.py collectstatic --no-input
